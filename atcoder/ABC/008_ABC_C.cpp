#include<iostream>
#include<cstdio>
using namespace std;

#define FOR(i,s,e) for(ll (i)=(s);(i)<(e);(i)++)
typedef long long ll;

/* -----  2017/03/03  Problem: ABC008 C / Link: http://abc008.contest.atcoder.jp/tasks/abc008_3 ----- */
/* ------問題------

高橋君は裏表が区別できる N 枚のコインを持っている。コインの大きさは異なり、それぞれのコインには 1 つずつ正の整数が書かれている。
これらのコインを無作為に (N! 通りの組み合わせがすべて同じ確率で出てくるように) 一列に並べる。その後、以下の手順を実行する。
すべてのコインを表向きにする。
左端のコインから順に、現在見ているコインよりも右側 (それ自身を除く) にあるコインのうち、
現在見ているコインに書かれている整数の倍数が書かれているコインすべての裏表をひっくり返す。
高橋君はこの操作を終了した後に表を向いているコインの枚数の期待値が知りたい。
あなたは高橋くんの代わりに、期待値を計算するプログラムを作成してほしい。

-----問題ここまで----- */
/* -----解説等-----

N!は厳しいので考える。位置に関係なく並び方を考えればいいので、表を向く確率を並び方を考慮せずに計算すればよい。
cnt C 左の枚数 * 左の枚数！ * (cnt - 左の枚数)! = cnt! となるので左に何枚あるかを考慮しなくてもよい。
よって 0-cntのうち偶数になるものを求めればよいことになる。

突然難しいなあ。

 ----解説ここまで---- */

ll N;
int C[200];
double ans = 0.0;

int main()
{
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    cin >> N;
    FOR(i, 0, N)
        cin >> C[i];

    FOR(i, 0, N) {
        int cnt = 0;
        FOR(j, 0, N) {
            if (i != j) {
                if (C[i] % C[j] == 0) cnt++;
            }
        }
        ans += (cnt / 2 + 1) / (cnt + 1);
    }

    printf("%.12f¥n", ans);

    return 0;
}