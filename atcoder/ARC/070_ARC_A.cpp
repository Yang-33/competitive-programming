#include<iostream>
using namespace std;

typedef long long ll;
#define FOR(i,s,e) for(ll (i)=(s);(i)<(e);(i)++)

/* -----  2017/03/18  Problem: ARC070 A / Link: http://arc070.contest.atcoder.jp/tasks/arc070_a ----- */
/* ------蝠城｡---

無限に左右に伸びている数直線上の 0 の地点に時刻 0 にカンガルーがいます。
カンガルーは時刻 i−1 から i にかけて、なにもしないか、もしくは長さがちょうど i のジャンプを、左右どちらかの方向を選んで行えます。
つまり、時刻 i−1 に座標 x にいたとすると、時刻 i には x−i, x, x+i のどれかに存在することが出来ます。 
カンガルーの家は座標 X にあります。カンガルーはできるだけ早く座標 X まで移動しようとしています。
カンガルーが座標 X に到着する時刻の最小値を求めてください。

-----問題ここまで----- */
/* -----解説等-----

毎秒階差１の数列が項数を増やしながら現れるとみれば [1,N] で表せるすべての数からN+1した場所へ移動が可能になるということで
移動可能点を(s,t)とすれば
[0,1]=>(0,1), [0,2]=>(0,1,2,3), [0,3]=>(0,1,2,3,4,5,6),となり
一般化すれば [0,n]=>( 0,Σk[0=>n] )となるから [0,n] + (n+1) => ( 0,Σk[0=>N+1] )となる

したがってΣkまで到達可能であるからこれを実際にシュミレートして逐次判定すればよい。

----解説ここまで---- */

ll N;

ll ans = 0LL;

int main()
{
	cin.tie(0);
	ios_base::sync_with_stdio(false);

	cin >> N;
	ll s = 0;
	FOR(i, 1, N + 1) {
		s += i;
		if (s >= N) {
			ans = i;
			break;
		}
	}

	cout << ans << endl;

	return 0;
}
