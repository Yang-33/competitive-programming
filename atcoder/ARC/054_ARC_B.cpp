#include<iostream>
#include<cstdio>
#include<cmath>
using namespace std;

typedef long long ll;
#define FOR(i,s,e) for(ll (i)=(s);(i)<(e);(i)++)

/* -----  2017/03/13  Problem: ARC054 B / Link: http://arc054.contest.atcoder.jp/tasks/arc054_b ----- */
/* ------問題------

高橋君はタカハシマン関数という関数に興味を持ちました。
高橋君は T(334) ( T はタカハシマン関数を表す)を計算したいと思いましたが、
それは現代のコンピュータでは P 年がかかるため、とても難しいということが分かりました。
半ば計算をあきらめかけていた高橋君でしたが、世の中にはムーアの法則という法則があることを知りました。 
ムーアの法則によると、コンピュータの速度は 1.5 年ごとに 2 倍になる速度で、指数関数的に増大することが分かりました。
より正確には、x 年後にはコンピュータの速度は現代の 2x⁄1.5 倍になります。
高橋君は適切なタイミングで計算を始めることで、T(334) の計算をできるだけ早く終わらせたいと思いました。
もちろん計算中にコンピュータを変えることはできないので、
計算を終えるまでの時間は (計算を始めるまでの時間)+(計算を始めた時点のコンピュータでT(334)を計算するのにかかる時間) であらわされます。
計算が終わるまでの最短の時間を求めてください。

-----問題ここまで----- */
/* -----解説等-----

わっほいほい黄金探索もあるzoi
凸関数は三分探索などで極値を求めることができる

----解説ここまで---- */

double P;

ll ans = 0LL;

double f(double x) {
	return x + P*powl(0.5, x / 1.5);
}

int main()
{
	cin.tie(0);
	ios_base::sync_with_stdio(false);

	cin >> P;

	double l = 0, r = 1000;
	FOR(i, 0, 1000) {
		double c1 = (2 * l + r) / 3;
		double c2 = (l + 2 * r) / 3;
		if (f(c1) > f(c2)) {
			l = c1;
		}
		else {
			r = c2;
		}
	}

	printf("%.15f\n", f(l));

	return 0;
}