#include <iostream>
#include <set>
using namespace std;

typedef long long ll;
#define FOR(i, s, e) for (ll(i) = (s); (i) < (e); (i)++)

/* -----  2017/03/31  Problem: JOI予選 2008 3  / Link:  http://www.ioi-jp.org/joi/2007/2008-yo-prob_and_sol/2008-yo-t3/2008-yo-t3.html ----- */
/* ------問題------

次のような2人で行うカードゲームがある．

このゲームでは， 1から2nまでの各整数が書かれた全部で2n枚のカードを使用する． ここで，nは1以上100以下の整数である．
このカードを2人にn枚ずつ配る．
次のルールに従って交互にカードを1枚ずつ場に出す．
場にカードが出ていないならば， 好きなカードを出すことができる．
場にカードが出ているならば， 最後に場に出たカードよりも大きい数の書かれたカードを出すことができる．
カードが出せる場合は，必ず場にカードを出す必要がある．
出せるカードが無い場合はパスとなり，相手の番になる． このとき，場に出ているカードは無くなる．
ゲームは場にカードが出ていない状態で始める．
どちらかの手持ちのカードが無くなった時点でゲームは終了する．
ゲーム終了時に相手の持っているカードの枚数を得点とする．
太郎と花子は， このゲームで対戦することになった． ゲームは太郎の番から始める． 2人は共に， 出すことのできるカードのうち必ず一番小さい数が書かれたカードを出すことにしている．

太郎に配られるカードが入力されたとき， 太郎と花子の得点を出力するプログラムを作成せよ．

-----問題ここまで----- */
/* -----解説等-----

愚直にシュミレーション。
setは便利だがちょっと危険臭がする。

----解説ここまで---- */

ll N;
bool c[205];
ll ans = 0LL;

int main() {
  cin.tie(0);
  ios_base::sync_with_stdio(false);

  set<int>s[2];
  FOR(i, 0, 205) {
      c[i] = true;
  }
  cin >> N; 
  FOR(i, 0, N) {
      int a; cin >> a;
      c[a] = false;
      s[0].insert(a);
  }
  int x = 0;
  FOR(i, 1, 2 * N+1 ) {
      if (c[i])s[1].insert(i);
  }
  int c = 1; int i = 0;
  while (s[0].size() && s[1].size()) {
      auto it = s[i].lower_bound(c);
      if (it == s[i].end())c = 1;
      else {
          c = *it;
          s[i].erase(it);
      }
      i = (i + 1) % 2;
  }

  cout << s[1].size() << endl;
  cout << s[0].size() << endl;

  return 0;
}
